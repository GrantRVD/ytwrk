package main

import (
	"archive/tar"
	"encoding/json"
	"io/ioutil"
	"os"
	"strings"

	"github.com/sirupsen/logrus"
	"github.com/spf13/cobra"
	yt "github.com/terorie/ytwrk"
)

var videoParseRawCmd = cobra.Command{
	Use:   "parseraw",
	Short: "Parse a tar archive generated by dumpraw",
	Args:  cobra.ExactArgs(1),
	Run:   cmdFunc(doVideoParseRaw),
}

func doVideoParseRaw(_ *cobra.Command, args []string) (err error) {
	enc := json.NewEncoder(os.Stdout)

	f, err := os.Open(args[0])
	if err != nil {
		return err
	}
	defer f.Close()
	rd := tar.NewReader(f)
	for {
		header, err := rd.Next()
		if err != nil {
			logrus.WithError(err).Fatal("Tar stream failed")
		}
		if !strings.HasSuffix(header.Name, ".json") {
			logrus.WithField("file", header.Name).
				Warn("Ignoring file")
			continue
		}
		id := header.Name[:len(header.Name)-len(".json")]
		if len(id) != 11 {
			logrus.WithField("file", header.Name).
				Warn("Ignoring file")
			continue
		}
		fileBuf, err := ioutil.ReadAll(rd)
		if err != nil {
			logrus.WithError(err).Fatal("Tar stream failed")
		}
		v, err := yt.ParseVideoBody(fileBuf, nil)
		if err != nil {
			logrus.WithField("id", id).WithError(err).
				Error("Failed to parse video")
			continue
		}
		if err := enc.Encode(v); err != nil {
			logrus.Fatal(err)
		}
		logrus.Debugf("Got video %s", id)
	}
}
